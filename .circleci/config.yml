version: 2.1

aliases:
  - &param_stack_yaml
    stack_yaml:
      type: string
      default: stack.yaml
  - &param_latest
    latest:
      type: boolean
      default: false

  - &cache_key
    v0-{{ checksum "cache-key.txt" }}

executors:
  centos7:
    parameters:
      <<: [*param_stack_yaml, *param_latest]

    docker:
      - image: centos:7
    working_directory: /root/src
    shell: /bin/bash -eux -o pipefail
    environment:
      STACK_YAML: << parameters.stack_yaml >>
      CI_LATEST: <<# parameters.latest >>1<</ parameters.latest >>

orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  run_build_and_test:
    parameters:
      <<: [*param_stack_yaml, *param_latest]

    executor:
      name: centos7
      stack_yaml: << parameters.stack_yaml >>
      latest: << parameters.latest >>

    steps:
      # init
      - checkout
      - run:
          name: Build cache key
          command: |
            FILES=(
              "${STACK_YAML}"
              package.yaml
            )
            cat "${FILES[@]}" > cache-key.txt
            curl -sSL https://get.haskellstack.org/ | sed -n 's/^STACK_VERSION="\(.*\)"/\1/p' >> cache-key.txt

      # install stack and dependencies
      - run:
          name: Install stack
          command: |
            curl -sSL https://get.haskellstack.org/ | sh
            stack --version
      - restore_cache:
          key: *cache_key
      - run:
          name: Build external dependencies
          command: |
            STACK_ARGS=(--test --only-dependencies)

            stack build -j1 "${STACK_ARGS[@]}"

            # build hlint/stylish-haskell for cache
            if [[ -n "${CI_LATEST}" ]]; then
                stack build -j1 hlint stylish-haskell
                stack install hpc-lcov --local-bin-path /usr/local/bin
            fi
      - save_cache:
          key: *cache_key
          paths:
            - ~/.stack
            - .stack-work

      # build
      - run:
          name: Build
          command: |
            STACK_ARGS=(
                --test
                --no-run-tests
            )
            if [[ -n "${CI_LATEST}" ]]; then
                STACK_ARGS+=(--coverage)
            fi

            stack build "${STACK_ARGS[@]}"
      - run:
          name: Check Cabal file up to date
          command: git diff --exit-code *.cabal

      # lint
      - when:
          condition: << parameters.latest >>
          steps:
            - run:
                name: Lint
                command: |
                  set +e
                  STATUS=0
                  scripts/hlint.sh || STATUS=1
                  scripts/stylish-haskell.sh || STATUS=1
                  exit "${STATUS}"

      # test
      - run:
          name: Test
          command: |
            STACK_ARGS=(--test)
            if [[ -n "${CI_LATEST}" ]]; then
              STACK_ARGS+=(--coverage)
            fi
            stack build "${STACK_ARGS[@]}"
      - when:
          condition: << parameters.latest >>
          steps:
            - run:
                name: Convert coverage output
                command: hpc-lcov
            - codecov/upload:
                file: lcov.info

      # build haddock
      - when:
          condition: << parameters.latest >>
          steps:
            - run:
                name: Build haddock
                command: stack haddock --no-haddock-deps
            - run:
                name: Bundle haddock docs
                command: |
                  mkdir -p .ci/
                  tar czf .ci/haddock-docs.tar.gz -C "$(find .stack-work/dist -regex '.*/doc/html/[^/]*')" .

      - store_artifacts:
          path: .ci/

workflows:
  version: 2

  build_and_test:
    jobs:
      - run_build_and_test:
          name: test_latest
          latest: true
      - run_build_and_test:
          name: test_ghc_9.2
          stack_yaml: stack-ghc-9.2.yaml
      - run_build_and_test:
          name: test_ghc_9.0
          stack_yaml: stack-ghc-9.0.yaml
      - run_build_and_test:
          name: test_ghc_8.10
          stack_yaml: stack-ghc-8.10.yaml
      - run_build_and_test:
          name: test_ghc_8.8
          stack_yaml: stack-ghc-8.8.yaml
      - run_build_and_test:
          name: test_ghc_8.6
          stack_yaml: stack-ghc-8.6.yaml
      - run_build_and_test:
          name: test_ghc_8.4
          stack_yaml: stack-ghc-8.4.yaml
      - run_build_and_test:
          name: test_ghc_8.2
          stack_yaml: stack-ghc-8.2.yaml
      - run_build_and_test:
          name: test_ghc_8.0
          stack_yaml: stack-ghc-8.0.yaml
